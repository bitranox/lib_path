language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all

        # PYTEST
        - PYTEST_DO_TESTS="True" 

        # FLAKE8 tests
        - DO_FLAKE8_TESTS="True"

        # MYPY tests
        - MYPY_DO_TESTS="True"
        - MYPY_OPTIONS="--follow-imports=normal --implicit-reexport --no-warn-unused-ignores --strict"
        - MYPYPATH="./lib_path/3rd_party_stubs"

        # coverage
        - DO_COVERAGE="True"
        - DO_COVERAGE_UPLOAD_CODECOV="True"
        - DO_COVERAGE_UPLOAD_CODE_CLIMATE="True"

        # package name
        - PACKAGE_NAME="lib_path"
        # the registered CLI Command
        - CLI_COMMAND="lib_path"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"

        # secure environment variable
        - secure: "EO4ol30yhg9byBDp8uUGufm7p8WhijMzy1yFrvvduceGm/lby8dqTaX5dM7/kgQiV33Z63AmGG3Ho/N1gE9EPZWwutI78G9lVAc++85E+jwEJB977I8xHg/C8obWyobYCA/Y99KqD5acmMuoA43lcmysLa0Jqfy7EIhRerG8ns1eZC9uO8oqSDoeo82K6xdSx6US+GPYwGyEU6o4trBLqmK31knhig9oQcGg3T3YTSLyeaEIsY14uk1BdWPVdpAMxoWLsCtrIC9lonD9PGgC6+1q8ZL9kFka2vWcxANavwsMQly/vtYhYvsKag1UuABfNrX7plKzYgVev+M6Qco9WNElFpvL6NywAuYpScCblP39aBn7RXpFpEw7LkSk/GvlRsHWfLsMfIBVK7Es2mqHbPxEqhKbKPsFuH8WYu++0f5jYDI1G4MDQQGXIyRwoJj0eWrz/yiVeQ9NZhxQN7DNJJOzkGyAW+QHFc/TfPsAyOPfAxOGwmx33DEeRLydxQR65cxhUBLzAx0S9pZstsyC2R+AFMo4QAHWZr0DHA5QkiN8GkgRrYLgj/g1KE+F0Jsb26JGmVMuOHgYWPoHtQ8ReJwcDPdA7ENoOEZ/7a9HmYNzcyV8f2qQDtyx2pPQwjhpVlTLfaAXqVggAB7YsBzQKKNmF2xOpn8w6X0vOiRiOn8="  # CC_TEST_REPORTER_ID.secret
        - secure: "kjIEnb91cosJWWJfuzP7uVNTM2u0iky4o4RSk3Ht2Dzb6yRogQdEBu4C8MiYr8Y8sy2so5k166kysIcPuUuwUXoU4QDQzb9kCS29MRbljVPy8vnbWrFdWCEI2FUBKl5crm4v+qrYNKW+f2XGKFCoZDO6fSIuTwP3yGAOpfW856nB3AA2IgLYeNPXAOOKacZmWJfmBDFjlRdsHuOpMfplnMme4JwaZ8zPnyqDyQEDhSF7leMFJMYx2YKKd0V9U4Egh88myofGMmhP43pz+NJbvL1yrUOnYL+vPW+Lc1IxSV3wNAzsvg+OavHNaebCpxuigu+0QWa+TW9XeeRvBp5s/PWDvPcQd7CB7WL6wTSxgoIawhjP15s/5Vp/ebrp3crgzkt+Ieimxiz09sdekaS44yCMTfXY9jJBc8iV+lLC63N+Foj3JNQT0lxUJgrPHGq3pHgrA5iguvxR8RCcHVq8vm1f70gwLjPh2HEMdLGOZg+1j7VnfhQXFfKw3LLSTQC+zk1M9wcczLZtuJlzfIJL4o/nQdP/1DoI9MZnVbrhDRDw7s0t93aKlxRBoRvTEtqbx0N/S39P0paL2OW188MtlQ4PJ5xCojyorTP0w35xBU8mpaer4rOKSHNWkAzQ8PlPUIDXMp4rU/pB0mOKFFijiUZywDkkxGbFwK4nDPdqDaU="  # PYPI_PASSWORD.secret



addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.9"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python310:/c/Python310/Scripts:/c/Python39:/c/Python39/Scripts:/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_DO_TESTS="True"


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="False"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="False"

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.4"
      python: "3.8"
      osx_image: xcode11.5
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_DO_TESTS="True"


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
